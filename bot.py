import discord
from discord.ext import commands
from bot_logic import gen_pass  # Aseg√∫rate de que gen_pass est√© definido en bot_logic
import random

# Configuraci√≥n de los intents
intents = discord.Intents.default()
intents.message_content = True  # Habilita el intent para leer el contenido de los mensajes

# Inicializaci√≥n del bot usando commands.Bot
bot = commands.Bot(command_prefix='$', intents=intents)

# Evento de inicio
@bot.event
async def on_ready():
    print(f'Hemos iniciado sesi√≥n como {bot.user}')

# Comando hello
@bot.command()
async def hello(ctx):
    await ctx.send("¬°Hola! Soy un bot")

# Comando bye
@bot.command()
async def bye(ctx):
    await ctx.send("ü´°")

# Comando password
@bot.command()
async def password(ctx):
    await ctx.send(gen_pass(10))  # Aseg√∫rate de que gen_pass funcione correctamente


@bot.command()
async def add(ctx, left: int, right: int):
    """Suma dos n√∫meros."""
    try:
        await ctx.send(left + right)
    except ValueError:
        await ctx.send("Por favor, aseg√∫rate de que ambos valores sean n√∫meros enteros.")


@bot.command()
async def show_commands(ctx):
    help_message = (
        "Aqu√≠ tienes los comandos que puedes usar:\n"
        "$hello - Saluda al bot.\n"
        "$bye - Desp√≠dete del bot.\n"
        "$password - Genera una contrase√±a.\n"
        "$add <n√∫mero1> <n√∫mero2> - Suma dos n√∫meros."
        "$guess <n√∫mero> - Adivina el n√∫mero del 1 al 10."
    )
    await ctx.send(help_message)


@bot.command()
async def guess(ctx, number: int):
    """Adivina el n√∫mero del 1 al 10."""
    secret_number = random.randint(1, 10)  # El bot elige un n√∫mero entre 1 y 10
    if number == secret_number:
        await ctx.send(f"¬°Correcto! El n√∫mero era {secret_number} üéâ")
    else:
        await ctx.send(f"Incorrecto. El n√∫mero era {secret_number}. Intenta de nuevo.")    


bot.run("TU_TOKEN_AQU√ç")  # Reemplaza 'TU_TOKEN_AQU√ç' con tu token real


